version: "3"

services:
  nginx:
    container_name: nginx
    build: ./service/nginx
    image: nginx:tea42
    # volumes:
    #     - frontend:/usr/app/srcs
    networks:
      - tea42_network
    env_file:
      - .env
    ports:
      - "80:80"
    restart: always
    depends_on:
      - postgresql
      # - frontend
      - backend

  frontend:
    container_name: next
    image: next:tea42
    build:
      context: service/frontend/
      dockerfile: Dockerfile
    volumes:
      - front_repo:/usr/app/srcs
    networks:
      - tea42_network
    env_file:
      - .env
    ports:
      - "3000:3000"
    expose:
      - "3000"
    restart: always

  backend:
    container_name: backend
    build: ./service/backend
    image: backend:tea42
    volumes:
      - backend:/usr/app/srcs
    networks:
      - tea42_network
    env_file:
      - .env
    expose:
      - "5000"
    restart: always
    depends_on:
      postgresql:
        condition: service_healthy

  redis:
    container_name: redis
    image: redis:6.2.5
    expose:
      - "6379"
    networks:
      - tea42_network
    restart: always

  postgresql:
    container_name: postgresql
    build:
      context: ./service/postgresql
      args:
        - POSTGRES_DB_NAME=${POSTGRES_DB_NAME}
        - POSTGRES_USER=${POSTGRES_USER}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    image: postgresql:tea42
    expose:
      - "5432"
    volumes:
      - postgresql:/var/lib/postgresql/data
    env_file:
      - .env
    networks:
      - tea42_network
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER"]
      interval: 10s
      retries: 5
      start_period: 30s

volumes:
  front_repo:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: "${PWD}/frontend"
  backend:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: "${PWD}/backend"
  postgresql:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: "${PWD}/service/postgresql/database"

networks:
  tea42_network:
    driver: bridge
