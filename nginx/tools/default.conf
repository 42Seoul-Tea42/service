# Nginx에서 백엔드 서버 그룹을 정의하는 부분
# 이 블록을 추가함으로써 여러 서버를 묶어서 로드 밸런싱을 수행하거나, 단일 서버로의 연결을 지정할 수 있습니다. 주로 프록시 패스에서 이용됩니다.
upstream gunicorn {
    server backend:5000;  # 백엔드 서버의 주소와 포트
    # server backend:5001;
    # server backend:5002;
    # server backend:5003;
    # server backend:5004;
}

# upstream front {
#     server next:3000;
# }

server {
    listen       80 reuseport;
    listen  [::]:80 reuseport;
    server_name  localhost;

    client_max_body_size 32M; # 또는 적절한 크기로 설정
    sendfile        on;
    keepalive_timeout  60;

    #access_log  /var/log/nginx/host.access.log  main;
    # error_log /var/log/nginx/error.log error;

    location / {
        # 프론트 빌드해서 첫 페이지 줄때 사용하는 부분
        root   /usr/share/nginx/html;
        index  index.html index.html;
        try_files $uri.html /$uri.html $uri $uri/ /$uri $uri.png $uri.jpg $uri.jpeg;

        # access_log off; #로그 출력 안함
        # proxy_pass http://front;
    }

    location /api/ {
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_pass http://gunicorn;
        proxy_buffering off; # 프록시 버퍼링 비활성화        
        access_log off; #로그 출력 안함
    }

    location /socket.io {
        # WebSocket 프록시 설정
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header X-NginX-Proxy true;

        proxy_http_version 1.1;
        proxy_buffering off;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_pass http://gunicorn/socket.io;
        access_log off; #로그 출력 안함
    }

    location /favicon.ico {
        root /usr/share/nginx/html;
        access_log off; #로그 출력 안함
    } 

    # error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    # error_page   500 502 503 504  /50x.html;
    # location = /50x.html {
    #     root   /usr/share/nginx/html;
    # }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}